{
    "openapi" : "3.0.0",
    "info": {
        "title": "Marca Texto",
        "description": "Marca Texto Api Endpoints"
    },
    "version": "1.0.0",
    "servers": [
        {
            "url" : "https://marca-texto.uc.r.appspot.com"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "summary": "Authenticate user",
                "description": "This route is responsable for authenticate users",
                "tags": ["Login"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "User e-mail"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "User password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content" : {
                            "application/json" : {
                                "schema":
                                    {
                                        "type": "object",
                                        "properties": {
                                            "token": {
                                                "type": "string",
                                                "description": "JWT Token"
                                            }
                                        }
                                    }
                            
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "summary": "Create user",
                "description": "This route is responsable for create new users",
                "tags": ["Users"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "User name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "User e-mail"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "User password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/users/{userId}": {
            "put": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary": "Update user",
                "description": "This route is responsable for update users",
                "tags": ["Users"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "description": "Numeric id of the user that will be deleted"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "User name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "User e-mail"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "User password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary": "Update user",
                "description": "This route is responsable for delete users",
                "tags": ["Users"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "description": "Numeric id of the user that will be deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/books": {
            "get": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary" : "Book Search",
                "description" : "This route is responsable for fetching books from google books api",
                "tags": ["Books"],
                "parameters": [
                    {
                        "in": "query",
                        "name": "q",
                        "required" : false,
                        "description": "Book search query. Optional parameter to query books by title",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content" : {
                            "application/json" : {
                                "schema":
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Book"
                                        }
                                    }
                            
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary": "Create books",
                "description": "This route is responsable for create new books",
                "tags": ["Books"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "description": "Book's title"
                                    },
                                    "pages": {
                                        "type": "string",
                                        "description": "Book's number page"
                                    },
                                    "publisher": {
                                        "type": "string",
                                        "description": "Book's Publisher"
                                    },
                                    "imageUrl": {
                                        "type": "string",
                                        "description": "Book's URL image (optional)"
                                    },
                                    "author": {
                                        "type": "string",
                                        "description": "Book's author"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/readings": {
            "get": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary" : "List readings",
                "description" : "This route is responsible for fetching saved books separated by reading status",
                "tags": ["Readings"],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Readings"
                                }
                            }
                        }

                    }
                }
            },
            "post": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary" : "Insert a new reading",
                "description" : "This route is responsible for inserting a new reading on user's book list with given status",
                "tags": ["Readings"],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "bookId": {
                                        "type": "integer",
                                        "nullable": "false",
                                        "description": "Book id on our database. "
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": ["Lendo", "Lidos", "Quero ler"],
                                        "nullable": "false",
                                        "description": "Current reading status. Values accepted: Lendo, Lidos, Quero ler"
                                    },
                                    "initialPage": {
                                        "type": "integer",
                                        "nullable": "true",
                                        "description": "Optional parameter for reading initial page"
                                    },
                                    "currentPage": {
                                        "type": "integer",
                                        "nullable": true,
                                        "description": "Optional parameter for reading current page"
                                    },
                                    "readingTime": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Optional parameter for reading time",
                                        "pattern": "^\\d{2}:\\d{2}:\\d{2}$"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reading"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/readings/reading": {
            "get": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary" : "List readings with status 'Lendo'",
                "description" : "This route is responsible for fetching saved books that contains status 'Lendo'",
                "tags": ["Readings"],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reading"
                                    }
                                }
                            }
                        }

                    }
                }
            }
        },
        "/readings/read": {
            "get": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary" : "List readings with status 'Lidos'",
                "description" : "This route is responsible for fetching saved books that contains status 'Lidos'",
                "tags": ["Readings"],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reading"
                                    }
                                }
                            }
                        }

                    }
                }
            }
        },
        "/readings/wants-to-read": {
            "get": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary" : "List readings with status 'Queo ler'",
                "description" : "This route is responsible for fetching saved books that contains status 'Quero ler'",
                "tags": ["Readings"],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reading"
                                    }
                                }
                            }
                        }

                    }
                }
            }
        },
        "/readings/{bookId}": {
            "delete": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary": "Delete user's book readings with book id",
                "description": "Route to delete a reading from user's list",
                "tags": ["Readings"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bookId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "description": "Numeric id of the book that will be deleted from user's list"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    }
                }
            },
            "put": {
                "security": [{
                    "ApiKeyAuth": []
                }],
                "summary": "Update book reading status with book id",
                "description": "Route to update book reading status with book id",
                "tags": ["Readings"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bookId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "description": "Numeric id of the book that will have it's status updated"
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "currentStatus": {
                                        "type": "string",
                                        "description": "Book's reading current status",
                                        "nullable": true
                                    },
                                    "initialPage": {
                                        "type": "integer",
                                        "description": "Book's initial reading page",
                                        "nullable": true
                                    },
                                    "currentPage": {
                                        "type": "integer",
                                        "description": "Book's current reading page",
                                        "nullable": true
                                    },
                                    "readingTime": {
                                        "type": "string",
                                        "description": "Book's current reading page",
                                        "nullable": true,
                                        "pattern": "^\\d{2}:\\d{2}:\\d{2}$"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "x-session-token"
            }
        },
        "schemas": {
            "Book" : {
                "type" : "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "nullable": "true",
                        "description": "Book id our database"
                    },
                    "googleId": {
                        "type": "string",
                        "description": "Book id on google database"
                    },
                    "title": {
                        "type": "string",
                        "description": "Book title"
                    },
                    "description": {
                        "type": "string",
                        "description": "Book description"
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Book authors"
                        }
                    },
                    "pageCount": {
                        "type": "integer",
                        "description": "Book page count"
                    },
                    "publisher": {
                        "type": "string",
                        "description": "Book publisher"
                    },
                    "imageUrl": {
                        "type": "string",
                        "nullable": true,
                        "description": "Book image url"
                    }
                }
            },
            "Readings": {
                "type": "object",
                "properties": {
                    "reading": {
                        "description": "Books that user is currently reading",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reading"
                        }
                    },
                    "read": {
                        "description": "Books that user has read",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reading"
                        }
                    },
                    "wantsToRead": {
                        "description": "Books that user wants to read",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reading"
                        }
                    }
                }
            },
            "Reading": {
                "type": "object",
                "properties": {
                    "book": {
                        "description": "Info about the book",
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Book id",
                                "type": "integer"
                            },
                            "googleId": {
                                "description": "Book id on google api",
                                "type": "string"
                            },
                            "title" : {
                                "description": "Book title",
                                "type": "string"
                            },
                            "description" : {
                                "description": "Book description",
                                "type": "string"
                            },
                            "author" : {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "Book authors"
                                }
                            },
                            "pages" : {
                                "description": "Book total page count",
                                "type": "integer"
                            },
                            "publisher" : {
                                "description": "Book publisher",
                                "type": "string"
                            },
                            "imageUrl" : {
                                "description": "Book image url",
                                "type": "string",
                                "optional": true
                            },
                            "rating" : {
                                "description": "Book rating",
                                "type": "integer",
                                "optional": true
                            }
                        }
                    },
                    "readingStatus": {
                        "description": "Info about book reading status",
                        "type": "object",
                        "properties": {
                            "currentStatus": {
                                "type": "string",
                                "enum": ["Lendo", "Lidos", "Quero ler"]
                            },
                            "initialPage": {
                                "type": "integer",
                                "optional": true
                            },
                            "currentPage": {
                                "type": "integer",
                                "optional": true
                            },
                            "readingTime": {
                                "type": "string",
                                "pattern": "^\\d{2}:\\d{2}:\\d{2}$"
                            }
                        }
                    },
                    "readingObservatios": {
                        "description": "Additional information on the book",
                        "type": "string",
                        "optional": true
                    }
                }
            }
        }
    },
    "security": {
        "ApiKeyAuth": []
    }
}